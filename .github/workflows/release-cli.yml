name: Release CLI

on:
  push:
    tags:
      - 'v*'      # Trigger on tags like v0.4.3
      - 'cli-v*'  # Also support legacy cli-v0.1.0 format
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Needed to create releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Build agent-core
        run: |
          echo "Building agent-core..."
          pnpm --filter @sentryvibe/agent-core build

      - name: Verify vendor packages (now committed to git)
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Verifying vendor packages in apps/runner/vendor/"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          if [ ! -d "apps/runner/vendor" ]; then
            echo "ERROR: apps/runner/vendor/ directory not found!"
            exit 1
          fi

          echo ""
          echo "Vendor files (should all be committed to git):"
          ls -lh apps/runner/vendor/

          # Count vendor files
          VENDOR_COUNT=$(ls -1 apps/runner/vendor/*.tgz 2>/dev/null | wc -l | tr -d ' ')
          echo ""
          echo "Total .tgz files: $VENDOR_COUNT"

          # Check for all required files (Sentry SDK tarballs)
          REQUIRED_FILES=(
            "sentry-core-LOCAL.tgz"
            "sentry-node-LOCAL.tgz"
            "sentry-node-core-LOCAL.tgz"
            "sentry-nextjs-LOCAL.tgz"
          )

          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "apps/runner/vendor/$file" ]; then
              echo "❌ MISSING: $file"
              echo "ERROR: Required vendor file not found!"
              exit 1
            else
              echo "✓ Found: $file"
            fi
          done

          if [ "$VENDOR_COUNT" -ne 4 ]; then
            echo ""
            echo "ERROR: Expected 4 vendor files (Sentry SDKs), found $VENDOR_COUNT"
            exit 1
          fi

          echo ""
          echo "✓ All required vendor packages verified"

      - name: Build CLI
        run: pnpm run build:cli

      - name: Prepare package.json for publishing
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Replacing file: dependencies with npm versions"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          node apps/runner/scripts/prepare-release.js

          echo ""
          echo "Verifying updated package.json dependencies:"
          cat apps/runner/package.json | jq '.dependencies'

      - name: Create tarball (includes vendor/ and dist/)
        run: |
          cd apps/runner

          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Pre-pack verification:"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          echo ""
          echo "1. Checking vendor/ directory:"
          if [ -d "vendor" ]; then
            ls -lh vendor/
            echo "  File count: $(ls -1 vendor/ | wc -l)"
          else
            echo "  ERROR: vendor/ directory does not exist!"
            exit 1
          fi

          echo ""
          echo "2. Checking dist/ directory:"
          if [ -d "dist" ]; then
            echo "  ✓ dist/ exists"
            echo "  File count: $(find dist/ -type f | wc -l)"
          else
            echo "  ERROR: dist/ directory does not exist!"
            exit 1
          fi

          echo ""
          echo "3. What npm pack will include (dry run):"
          npm pack --dry-run 2>&1 | grep -E "vendor/|files:" | head -10

          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Creating tarball with npm pack..."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          npm pack

          echo ""
          echo "4. Created tarball:"
          ls -lh *.tgz

          # Rename to standard name
          mv *.tgz sentryvibe-cli.tgz

          echo ""
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Verifying final tarball contents:"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

          echo ""
          echo "5. Vendor files in tarball:"
          tar -tzf sentryvibe-cli.tgz | grep "vendor/" || echo "  ⚠️  WARNING: No vendor/ files found in tarball!"

          echo ""
          echo "6. All tarball contents (sample):"
          tar -tzf sentryvibe-cli.tgz | head -50

          echo ""
          echo "✓ Package created: sentryvibe-cli.tgz"

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            # Support both v* and cli-v* formats
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#cli-v}  # Remove cli-v prefix if present
            VERSION=${VERSION#v}      # Remove v prefix if present
          else
            VERSION="latest"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: SentryVibe CLI ${{ steps.version.outputs.version }}
          body: |
            # SentryVibe CLI ${{ steps.version.outputs.version }}

            AI-powered project generation with local runner support.

            ## Installation

            ```bash
            curl -fsSL https://raw.githubusercontent.com/codyde/sentryvibe/main/install-cli.sh | bash
            ```

            Or install directly:

            ```bash
            npm install -g https://github.com/codyde/sentryvibe/releases/download/${{ github.ref_name }}/sentryvibe-cli.tgz
            ```

            ## Quick Start

            ```bash
            sentryvibe init -y
            sentryvibe run
            ```

            See [full documentation](https://github.com/codyde/sentryvibe/blob/main/apps/runner/README.md) for details.
          files: |
            apps/runner/sentryvibe-cli.tgz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
