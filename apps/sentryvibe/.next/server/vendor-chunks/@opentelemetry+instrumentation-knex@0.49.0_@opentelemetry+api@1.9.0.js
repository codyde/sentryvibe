"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SUPPORTED_VERSIONS = exports.MODULE_NAME = void 0;\nexports.MODULE_NAME = 'knex';\nexports.SUPPORTED_VERSIONS = [\n    // use \"lib/execution\" for runner.js, \"lib\" for client.js as basepath, latest tested 0.95.6\n    '>=0.22.0 <4',\n    // use \"lib\" as basepath\n    '>=0.10.0 <0.18.0',\n    '>=0.19.0 <0.22.0',\n    // use \"src\" as basepath\n    '>=0.18.0 <0.19.0',\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLG1CQUFtQjtBQUNoRCxtQkFBbUI7QUFDbkIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNVUFBPUlRFRF9WRVJTSU9OUyA9IGV4cG9ydHMuTU9EVUxFX05BTUUgPSB2b2lkIDA7XG5leHBvcnRzLk1PRFVMRV9OQU1FID0gJ2tuZXgnO1xuZXhwb3J0cy5TVVBQT1JURURfVkVSU0lPTlMgPSBbXG4gICAgLy8gdXNlIFwibGliL2V4ZWN1dGlvblwiIGZvciBydW5uZXIuanMsIFwibGliXCIgZm9yIGNsaWVudC5qcyBhcyBiYXNlcGF0aCwgbGF0ZXN0IHRlc3RlZCAwLjk1LjZcbiAgICAnPj0wLjIyLjAgPDQnLFxuICAgIC8vIHVzZSBcImxpYlwiIGFzIGJhc2VwYXRoXG4gICAgJz49MC4xMC4wIDwwLjE4LjAnLFxuICAgICc+PTAuMTkuMCA8MC4yMi4wJyxcbiAgICAvLyB1c2UgXCJzcmNcIiBhcyBiYXNlcGF0aFxuICAgICc+PTAuMTguMCA8MC4xOS4wJyxcbl07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nvar instrumentation_1 = __webpack_require__(/*! ./instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\");\nObject.defineProperty(exports, \"KnexInstrumentation\", ({ enumerable: true, get: function () { return instrumentation_1.KnexInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLHdCQUF3QixtQkFBTyxDQUFDLGtOQUFtQjtBQUNuRCx1REFBc0QsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDL0kiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2R5ZGVhcmtsYW5kL3NlbnRyeXZpYmUvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktuZXhJbnN0cnVtZW50YXRpb24gPSB2b2lkIDA7XG52YXIgaW5zdHJ1bWVudGF0aW9uXzEgPSByZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLbmV4SW5zdHJ1bWVudGF0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnN0cnVtZW50YXRpb25fMS5LbmV4SW5zdHJ1bWVudGF0aW9uOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\");\nconst constants = __webpack_require__(/*! ./constants */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst contextSymbol = Symbol('opentelemetry.instrumentation-knex.context');\nconst DEFAULT_CONFIG = {\n    maxQueryLength: 1022,\n    requireParentSpan: false,\n};\nclass KnexInstrumentation extends instrumentation_1.InstrumentationBase {\n    _semconvStability;\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n        this._semconvStability = (0, instrumentation_1.semconvStabilityFromStr)('database', process.env.OTEL_SEMCONV_STABILITY_OPT_IN);\n    }\n    setConfig(config = {}) {\n        super.setConfig({ ...DEFAULT_CONFIG, ...config });\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition(constants.MODULE_NAME, constants.SUPPORTED_VERSIONS);\n        module.files.push(this.getClientNodeModuleFileInstrumentation('src'), this.getClientNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('src'), this.getRunnerNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('lib/execution'));\n        return module;\n    }\n    getRunnerNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/runner.js`, constants.SUPPORTED_VERSIONS, (Runner, moduleVersion) => {\n            this.ensureWrapped(Runner.prototype, 'query', this.createQueryWrapper(moduleVersion));\n            return Runner;\n        }, (Runner, moduleVersion) => {\n            this._unwrap(Runner.prototype, 'query');\n            return Runner;\n        });\n    }\n    getClientNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/client.js`, constants.SUPPORTED_VERSIONS, (Client) => {\n            this.ensureWrapped(Client.prototype, 'queryBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'schemaBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'raw', this.storeContext.bind(this));\n            return Client;\n        }, (Client) => {\n            this._unwrap(Client.prototype, 'queryBuilder');\n            this._unwrap(Client.prototype, 'schemaBuilder');\n            this._unwrap(Client.prototype, 'raw');\n            return Client;\n        });\n    }\n    createQueryWrapper(moduleVersion) {\n        const instrumentation = this;\n        return function wrapQuery(original) {\n            return function wrapped_logging_method(query) {\n                const config = this.client.config;\n                const table = utils.extractTableName(this.builder);\n                // `method` actually refers to the knex API method - Not exactly \"operation\"\n                // in the spec sense, but matches most of the time.\n                const operation = query?.method;\n                const name = config?.connection?.filename || config?.connection?.database;\n                const { maxQueryLength } = instrumentation.getConfig();\n                const attributes = {\n                    'knex.version': moduleVersion,\n                };\n                const transport = config?.connection?.filename === ':memory:' ? 'inproc' : undefined;\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.SEMATTRS_DB_SQL_TABLE]: table,\n                        [semantic_conventions_1.SEMATTRS_DB_OPERATION]: operation,\n                        [semantic_conventions_1.SEMATTRS_DB_USER]: config?.connection?.user,\n                        [semantic_conventions_1.SEMATTRS_DB_NAME]: name,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: config?.connection?.host,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: config?.connection?.port,\n                        [semantic_conventions_1.SEMATTRS_NET_TRANSPORT]: transport,\n                    });\n                }\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.ATTR_DB_SYSTEM_NAME]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.ATTR_DB_COLLECTION_NAME]: table,\n                        [semantic_conventions_1.ATTR_DB_OPERATION_NAME]: operation,\n                        [semantic_conventions_1.ATTR_DB_NAMESPACE]: name,\n                        [semantic_conventions_1.ATTR_SERVER_ADDRESS]: config?.connection?.host,\n                        [semantic_conventions_1.ATTR_SERVER_PORT]: config?.connection?.port,\n                    });\n                }\n                if (maxQueryLength) {\n                    // filters both undefined and 0\n                    const queryText = utils.limitLength(query?.sql, maxQueryLength);\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                        attributes[semantic_conventions_1.ATTR_DB_QUERY_TEXT] = queryText;\n                    }\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                        attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = queryText;\n                    }\n                }\n                const parentContext = this.builder[contextSymbol] || api.context.active();\n                const parentSpan = api.trace.getSpan(parentContext);\n                const hasActiveParent = parentSpan && api.trace.isSpanContextValid(parentSpan.spanContext());\n                if (instrumentation._config.requireParentSpan && !hasActiveParent) {\n                    return original.bind(this)(...arguments);\n                }\n                const span = instrumentation.tracer.startSpan(utils.getName(name, operation, table), {\n                    kind: api.SpanKind.CLIENT,\n                    attributes,\n                }, parentContext);\n                const spanContext = api.trace.setSpan(api.context.active(), span);\n                return api.context\n                    .with(spanContext, original, this, ...arguments)\n                    .then((result) => {\n                    span.end();\n                    return result;\n                })\n                    .catch((err) => {\n                    // knex adds full query with all the binding values to the message,\n                    // we want to undo that without changing the original error\n                    const formatter = utils.getFormatter(this);\n                    const fullQuery = formatter(query.sql, query.bindings || []);\n                    const message = err.message.replace(fullQuery + ' - ', '');\n                    const exc = utils.otelExceptionFromKnexError(err, message);\n                    span.recordException(exc);\n                    span.setStatus({ code: api.SpanStatusCode.ERROR, message });\n                    span.end();\n                    throw err;\n                });\n            };\n        };\n    }\n    storeContext(original) {\n        return function wrapped_logging_method() {\n            const builder = original.apply(this, arguments);\n            // Builder is a custom promise type and when awaited it fails to propagate context.\n            // We store the parent context at the moment of initiating the builder\n            // otherwise we'd have nothing to attach the span as a child for in `query`.\n            Object.defineProperty(builder, contextSymbol, {\n                value: api.context.active(),\n            });\n            return builder;\n        };\n    }\n    ensureWrapped(obj, methodName, wrapper) {\n        if ((0, instrumentation_1.isWrapped)(obj[methodName])) {\n            this._unwrap(obj, methodName);\n        }\n        this._wrap(obj, methodName, wrapper);\n    }\n}\nexports.KnexInstrumentation = KnexInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvaW5zdHJ1bWVudGF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhLENBQUMsb0RBQW9ELHlDQUF5QywwQ0FBMEMsOENBQThDO0FBQ25NO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsWUFBWSxtQkFBTyxDQUFDLDZJQUFvQjtBQUN4QztBQUNBLGtCQUFrQixtQkFBTyxDQUFDLGtNQUFXO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLHNNQUFhO0FBQ3ZDLDBCQUEwQixtQkFBTyxDQUFDLDRNQUFnQztBQUNsRSxjQUFjLG1CQUFPLENBQUMsOExBQVM7QUFDL0IsK0JBQStCLG1CQUFPLENBQUMsaU1BQXFDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLG1FQUFtRSw4QkFBOEI7QUFDakc7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiwwQkFBMEIsOEJBQThCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLFNBQVM7QUFDcEY7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyRUFBMkUsU0FBUztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHlDQUF5QztBQUM5RTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2R5ZGVhcmtsYW5kL3NlbnRyeXZpYmUvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9pbnN0cnVtZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7O2dsb2JhbFRoaXNbXCJfc2VudHJ5UmV3cml0ZXNUdW5uZWxQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJTRU5UUllfUkVMRUFTRVwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeUJhc2VQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5TmV4dEpzVmVyc2lvblwiXSA9IFwiMTUuNS40XCI7Z2xvYmFsVGhpc1tcIl9zZW50cnlSZXdyaXRlRnJhbWVzRGlzdERpclwiXSA9IFwiLm5leHRcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktuZXhJbnN0cnVtZW50YXRpb24gPSB2b2lkIDA7XG5jb25zdCBhcGkgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvYXBpXCIpO1xuLyoqIEBrbmlwaWdub3JlICovXG5jb25zdCB2ZXJzaW9uXzEgPSByZXF1aXJlKFwiLi92ZXJzaW9uXCIpO1xuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3QgaW5zdHJ1bWVudGF0aW9uXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uXCIpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHNlbWFudGljX2NvbnZlbnRpb25zXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnNcIik7XG5jb25zdCBjb250ZXh0U3ltYm9sID0gU3ltYm9sKCdvcGVudGVsZW1ldHJ5Lmluc3RydW1lbnRhdGlvbi1rbmV4LmNvbnRleHQnKTtcbmNvbnN0IERFRkFVTFRfQ09ORklHID0ge1xuICAgIG1heFF1ZXJ5TGVuZ3RoOiAxMDIyLFxuICAgIHJlcXVpcmVQYXJlbnRTcGFuOiBmYWxzZSxcbn07XG5jbGFzcyBLbmV4SW5zdHJ1bWVudGF0aW9uIGV4dGVuZHMgaW5zdHJ1bWVudGF0aW9uXzEuSW5zdHJ1bWVudGF0aW9uQmFzZSB7XG4gICAgX3NlbWNvbnZTdGFiaWxpdHk7XG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIodmVyc2lvbl8xLlBBQ0tBR0VfTkFNRSwgdmVyc2lvbl8xLlBBQ0tBR0VfVkVSU0lPTiwgeyAuLi5ERUZBVUxUX0NPTkZJRywgLi4uY29uZmlnIH0pO1xuICAgICAgICB0aGlzLl9zZW1jb252U3RhYmlsaXR5ID0gKDAsIGluc3RydW1lbnRhdGlvbl8xLnNlbWNvbnZTdGFiaWxpdHlGcm9tU3RyKSgnZGF0YWJhc2UnLCBwcm9jZXNzLmVudi5PVEVMX1NFTUNPTlZfU1RBQklMSVRZX09QVF9JTik7XG4gICAgfVxuICAgIHNldENvbmZpZyhjb25maWcgPSB7fSkge1xuICAgICAgICBzdXBlci5zZXRDb25maWcoeyAuLi5ERUZBVUxUX0NPTkZJRywgLi4uY29uZmlnIH0pO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICBjb25zdCBtb2R1bGUgPSBuZXcgaW5zdHJ1bWVudGF0aW9uXzEuSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24oY29uc3RhbnRzLk1PRFVMRV9OQU1FLCBjb25zdGFudHMuU1VQUE9SVEVEX1ZFUlNJT05TKTtcbiAgICAgICAgbW9kdWxlLmZpbGVzLnB1c2godGhpcy5nZXRDbGllbnROb2RlTW9kdWxlRmlsZUluc3RydW1lbnRhdGlvbignc3JjJyksIHRoaXMuZ2V0Q2xpZW50Tm9kZU1vZHVsZUZpbGVJbnN0cnVtZW50YXRpb24oJ2xpYicpLCB0aGlzLmdldFJ1bm5lck5vZGVNb2R1bGVGaWxlSW5zdHJ1bWVudGF0aW9uKCdzcmMnKSwgdGhpcy5nZXRSdW5uZXJOb2RlTW9kdWxlRmlsZUluc3RydW1lbnRhdGlvbignbGliJyksIHRoaXMuZ2V0UnVubmVyTm9kZU1vZHVsZUZpbGVJbnN0cnVtZW50YXRpb24oJ2xpYi9leGVjdXRpb24nKSk7XG4gICAgICAgIHJldHVybiBtb2R1bGU7XG4gICAgfVxuICAgIGdldFJ1bm5lck5vZGVNb2R1bGVGaWxlSW5zdHJ1bWVudGF0aW9uKGJhc2VQYXRoKSB7XG4gICAgICAgIHJldHVybiBuZXcgaW5zdHJ1bWVudGF0aW9uXzEuSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZUZpbGUoYGtuZXgvJHtiYXNlUGF0aH0vcnVubmVyLmpzYCwgY29uc3RhbnRzLlNVUFBPUlRFRF9WRVJTSU9OUywgKFJ1bm5lciwgbW9kdWxlVmVyc2lvbikgPT4ge1xuICAgICAgICAgICAgdGhpcy5lbnN1cmVXcmFwcGVkKFJ1bm5lci5wcm90b3R5cGUsICdxdWVyeScsIHRoaXMuY3JlYXRlUXVlcnlXcmFwcGVyKG1vZHVsZVZlcnNpb24pKTtcbiAgICAgICAgICAgIHJldHVybiBSdW5uZXI7XG4gICAgICAgIH0sIChSdW5uZXIsIG1vZHVsZVZlcnNpb24pID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Vud3JhcChSdW5uZXIucHJvdG90eXBlLCAncXVlcnknKTtcbiAgICAgICAgICAgIHJldHVybiBSdW5uZXI7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRDbGllbnROb2RlTW9kdWxlRmlsZUluc3RydW1lbnRhdGlvbihiYXNlUGF0aCkge1xuICAgICAgICByZXR1cm4gbmV3IGluc3RydW1lbnRhdGlvbl8xLkluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlKGBrbmV4LyR7YmFzZVBhdGh9L2NsaWVudC5qc2AsIGNvbnN0YW50cy5TVVBQT1JURURfVkVSU0lPTlMsIChDbGllbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZW5zdXJlV3JhcHBlZChDbGllbnQucHJvdG90eXBlLCAncXVlcnlCdWlsZGVyJywgdGhpcy5zdG9yZUNvbnRleHQuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB0aGlzLmVuc3VyZVdyYXBwZWQoQ2xpZW50LnByb3RvdHlwZSwgJ3NjaGVtYUJ1aWxkZXInLCB0aGlzLnN0b3JlQ29udGV4dC5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIHRoaXMuZW5zdXJlV3JhcHBlZChDbGllbnQucHJvdG90eXBlLCAncmF3JywgdGhpcy5zdG9yZUNvbnRleHQuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICByZXR1cm4gQ2xpZW50O1xuICAgICAgICB9LCAoQ2xpZW50KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl91bndyYXAoQ2xpZW50LnByb3RvdHlwZSwgJ3F1ZXJ5QnVpbGRlcicpO1xuICAgICAgICAgICAgdGhpcy5fdW53cmFwKENsaWVudC5wcm90b3R5cGUsICdzY2hlbWFCdWlsZGVyJyk7XG4gICAgICAgICAgICB0aGlzLl91bndyYXAoQ2xpZW50LnByb3RvdHlwZSwgJ3JhdycpO1xuICAgICAgICAgICAgcmV0dXJuIENsaWVudDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZVF1ZXJ5V3JhcHBlcihtb2R1bGVWZXJzaW9uKSB7XG4gICAgICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHRoaXM7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiB3cmFwUXVlcnkob3JpZ2luYWwpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiB3cmFwcGVkX2xvZ2dpbmdfbWV0aG9kKHF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5jbGllbnQuY29uZmlnO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhYmxlID0gdXRpbHMuZXh0cmFjdFRhYmxlTmFtZSh0aGlzLmJ1aWxkZXIpO1xuICAgICAgICAgICAgICAgIC8vIGBtZXRob2RgIGFjdHVhbGx5IHJlZmVycyB0byB0aGUga25leCBBUEkgbWV0aG9kIC0gTm90IGV4YWN0bHkgXCJvcGVyYXRpb25cIlxuICAgICAgICAgICAgICAgIC8vIGluIHRoZSBzcGVjIHNlbnNlLCBidXQgbWF0Y2hlcyBtb3N0IG9mIHRoZSB0aW1lLlxuICAgICAgICAgICAgICAgIGNvbnN0IG9wZXJhdGlvbiA9IHF1ZXJ5Py5tZXRob2Q7XG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGNvbmZpZz8uY29ubmVjdGlvbj8uZmlsZW5hbWUgfHwgY29uZmlnPy5jb25uZWN0aW9uPy5kYXRhYmFzZTtcbiAgICAgICAgICAgICAgICBjb25zdCB7IG1heFF1ZXJ5TGVuZ3RoIH0gPSBpbnN0cnVtZW50YXRpb24uZ2V0Q29uZmlnKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgJ2tuZXgudmVyc2lvbic6IG1vZHVsZVZlcnNpb24sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc3BvcnQgPSBjb25maWc/LmNvbm5lY3Rpb24/LmZpbGVuYW1lID09PSAnOm1lbW9yeTonID8gJ2lucHJvYycgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgaWYgKGluc3RydW1lbnRhdGlvbi5fc2VtY29udlN0YWJpbGl0eSAmIGluc3RydW1lbnRhdGlvbl8xLlNlbWNvbnZTdGFiaWxpdHkuT0xEKSB7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oYXR0cmlidXRlcywge1xuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfU1lTVEVNXTogdXRpbHMubWFwU3lzdGVtKGNvbmZpZy5jbGllbnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfU1FMX1RBQkxFXTogdGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9PUEVSQVRJT05dOiBvcGVyYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9VU0VSXTogY29uZmlnPy5jb25uZWN0aW9uPy51c2VyLFxuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfTkFNRV06IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogY29uZmlnPy5jb25uZWN0aW9uPy5ob3N0LFxuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfTkVUX1BFRVJfUE9SVF06IGNvbmZpZz8uY29ubmVjdGlvbj8ucG9ydCxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX05FVF9UUkFOU1BPUlRdOiB0cmFuc3BvcnQsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW5zdHJ1bWVudGF0aW9uLl9zZW1jb252U3RhYmlsaXR5ICYgaW5zdHJ1bWVudGF0aW9uXzEuU2VtY29udlN0YWJpbGl0eS5TVEFCTEUpIHtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihhdHRyaWJ1dGVzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5BVFRSX0RCX1NZU1RFTV9OQU1FXTogdXRpbHMubWFwU3lzdGVtKGNvbmZpZy5jbGllbnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuQVRUUl9EQl9DT0xMRUNUSU9OX05BTUVdOiB0YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLkFUVFJfREJfT1BFUkFUSU9OX05BTUVdOiBvcGVyYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5BVFRSX0RCX05BTUVTUEFDRV06IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5BVFRSX1NFUlZFUl9BRERSRVNTXTogY29uZmlnPy5jb25uZWN0aW9uPy5ob3N0LFxuICAgICAgICAgICAgICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuQVRUUl9TRVJWRVJfUE9SVF06IGNvbmZpZz8uY29ubmVjdGlvbj8ucG9ydCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChtYXhRdWVyeUxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBmaWx0ZXJzIGJvdGggdW5kZWZpbmVkIGFuZCAwXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXJ5VGV4dCA9IHV0aWxzLmxpbWl0TGVuZ3RoKHF1ZXJ5Py5zcWwsIG1heFF1ZXJ5TGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGluc3RydW1lbnRhdGlvbi5fc2VtY29udlN0YWJpbGl0eSAmIGluc3RydW1lbnRhdGlvbl8xLlNlbWNvbnZTdGFiaWxpdHkuU1RBQkxFKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzW3NlbWFudGljX2NvbnZlbnRpb25zXzEuQVRUUl9EQl9RVUVSWV9URVhUXSA9IHF1ZXJ5VGV4dDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5zdHJ1bWVudGF0aW9uLl9zZW1jb252U3RhYmlsaXR5ICYgaW5zdHJ1bWVudGF0aW9uXzEuU2VtY29udlN0YWJpbGl0eS5PTEQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXNbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9TVEFURU1FTlRdID0gcXVlcnlUZXh0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudENvbnRleHQgPSB0aGlzLmJ1aWxkZXJbY29udGV4dFN5bWJvbF0gfHwgYXBpLmNvbnRleHQuYWN0aXZlKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50U3BhbiA9IGFwaS50cmFjZS5nZXRTcGFuKHBhcmVudENvbnRleHQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc0FjdGl2ZVBhcmVudCA9IHBhcmVudFNwYW4gJiYgYXBpLnRyYWNlLmlzU3BhbkNvbnRleHRWYWxpZChwYXJlbnRTcGFuLnNwYW5Db250ZXh0KCkpO1xuICAgICAgICAgICAgICAgIGlmIChpbnN0cnVtZW50YXRpb24uX2NvbmZpZy5yZXF1aXJlUGFyZW50U3BhbiAmJiAhaGFzQWN0aXZlUGFyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbC5iaW5kKHRoaXMpKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHNwYW4gPSBpbnN0cnVtZW50YXRpb24udHJhY2VyLnN0YXJ0U3Bhbih1dGlscy5nZXROYW1lKG5hbWUsIG9wZXJhdGlvbiwgdGFibGUpLCB7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IGFwaS5TcGFuS2luZC5DTElFTlQsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXMsXG4gICAgICAgICAgICAgICAgfSwgcGFyZW50Q29udGV4dCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3BhbkNvbnRleHQgPSBhcGkudHJhY2Uuc2V0U3BhbihhcGkuY29udGV4dC5hY3RpdmUoKSwgc3Bhbik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5jb250ZXh0XG4gICAgICAgICAgICAgICAgICAgIC53aXRoKHNwYW5Db250ZXh0LCBvcmlnaW5hbCwgdGhpcywgLi4uYXJndW1lbnRzKVxuICAgICAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8ga25leCBhZGRzIGZ1bGwgcXVlcnkgd2l0aCBhbGwgdGhlIGJpbmRpbmcgdmFsdWVzIHRvIHRoZSBtZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICAvLyB3ZSB3YW50IHRvIHVuZG8gdGhhdCB3aXRob3V0IGNoYW5naW5nIHRoZSBvcmlnaW5hbCBlcnJvclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3JtYXR0ZXIgPSB1dGlscy5nZXRGb3JtYXR0ZXIodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZ1bGxRdWVyeSA9IGZvcm1hdHRlcihxdWVyeS5zcWwsIHF1ZXJ5LmJpbmRpbmdzIHx8IFtdKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGVyci5tZXNzYWdlLnJlcGxhY2UoZnVsbFF1ZXJ5ICsgJyAtICcsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhjID0gdXRpbHMub3RlbEV4Y2VwdGlvbkZyb21LbmV4RXJyb3IoZXJyLCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5yZWNvcmRFeGNlcHRpb24oZXhjKTtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBjb2RlOiBhcGkuU3BhblN0YXR1c0NvZGUuRVJST1IsIG1lc3NhZ2UgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0b3JlQ29udGV4dChvcmlnaW5hbCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gd3JhcHBlZF9sb2dnaW5nX21ldGhvZCgpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkZXIgPSBvcmlnaW5hbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgLy8gQnVpbGRlciBpcyBhIGN1c3RvbSBwcm9taXNlIHR5cGUgYW5kIHdoZW4gYXdhaXRlZCBpdCBmYWlscyB0byBwcm9wYWdhdGUgY29udGV4dC5cbiAgICAgICAgICAgIC8vIFdlIHN0b3JlIHRoZSBwYXJlbnQgY29udGV4dCBhdCB0aGUgbW9tZW50IG9mIGluaXRpYXRpbmcgdGhlIGJ1aWxkZXJcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSB3ZSdkIGhhdmUgbm90aGluZyB0byBhdHRhY2ggdGhlIHNwYW4gYXMgYSBjaGlsZCBmb3IgaW4gYHF1ZXJ5YC5cbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShidWlsZGVyLCBjb250ZXh0U3ltYm9sLCB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGFwaS5jb250ZXh0LmFjdGl2ZSgpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gYnVpbGRlcjtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZW5zdXJlV3JhcHBlZChvYmosIG1ldGhvZE5hbWUsIHdyYXBwZXIpIHtcbiAgICAgICAgaWYgKCgwLCBpbnN0cnVtZW50YXRpb25fMS5pc1dyYXBwZWQpKG9ialttZXRob2ROYW1lXSkpIHtcbiAgICAgICAgICAgIHRoaXMuX3Vud3JhcChvYmosIG1ldGhvZE5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3dyYXAob2JqLCBtZXRob2ROYW1lLCB3cmFwcGVyKTtcbiAgICB9XG59XG5leHBvcnRzLktuZXhJbnN0cnVtZW50YXRpb24gPSBLbmV4SW5zdHJ1bWVudGF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = void 0;\n/*\n * This file contains a copy of unstable semantic convention definitions\n * used by this package.\n * @see https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions#unstable-semconv\n */\n/**\n * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n */\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = 'sqlite';\n//# sourceMappingURL=semconv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvc2VtY29udi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDBCQUEwQjtBQUNoRTtBQUNBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL3NlbWNvbnYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EQl9TWVNURU1fTkFNRV9WQUxVRV9TUUxJVEUgPSB2b2lkIDA7XG4vKlxuICogVGhpcyBmaWxlIGNvbnRhaW5zIGEgY29weSBvZiB1bnN0YWJsZSBzZW1hbnRpYyBjb252ZW50aW9uIGRlZmluaXRpb25zXG4gKiB1c2VkIGJ5IHRoaXMgcGFja2FnZS5cbiAqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktanMvdHJlZS9tYWluL3NlbWFudGljLWNvbnZlbnRpb25zI3Vuc3RhYmxlLXNlbWNvbnZcbiAqL1xuLyoqXG4gKiBFbnVtIHZhbHVlIFwic3FsaXRlXCIgZm9yIGF0dHJpYnV0ZSB7QGxpbmsgQVRUUl9EQl9TWVNURU1fTkFNRX0uXG4gKi9cbmV4cG9ydHMuREJfU1lTVEVNX05BTUVfVkFMVUVfU1FMSVRFID0gJ3NxbGl0ZSc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZW1jb252LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extractTableName = exports.limitLength = exports.getName = exports.mapSystem = exports.otelExceptionFromKnexError = exports.getFormatter = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst semconv_1 = __webpack_require__(/*! ./semconv */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\");\nconst getFormatter = (runner) => {\n    if (runner) {\n        if (runner.client) {\n            if (runner.client._formatQuery) {\n                return runner.client._formatQuery.bind(runner.client);\n            }\n            else if (runner.client.SqlString) {\n                return runner.client.SqlString.format.bind(runner.client.SqlString);\n            }\n        }\n        if (runner.builder) {\n            return runner.builder.toString.bind(runner.builder);\n        }\n    }\n    return () => '<noop formatter>';\n};\nexports.getFormatter = getFormatter;\nfunction otelExceptionFromKnexError(err, message) {\n    if (!(err && err instanceof Error)) {\n        return err;\n    }\n    return {\n        message,\n        code: err.code,\n        stack: err.stack,\n        name: err.name,\n    };\n}\nexports.otelExceptionFromKnexError = otelExceptionFromKnexError;\nconst systemMap = new Map([\n    ['sqlite3', semconv_1.DB_SYSTEM_NAME_VALUE_SQLITE],\n    ['pg', semantic_conventions_1.DB_SYSTEM_NAME_VALUE_POSTGRESQL],\n]);\nconst mapSystem = (knexSystem) => {\n    return systemMap.get(knexSystem) || knexSystem;\n};\nexports.mapSystem = mapSystem;\nconst getName = (db, operation, table) => {\n    if (operation) {\n        if (table) {\n            return `${operation} ${db}.${table}`;\n        }\n        return `${operation} ${db}`;\n    }\n    return db;\n};\nexports.getName = getName;\nconst limitLength = (str, maxLength) => {\n    if (typeof str === 'string' &&\n        typeof maxLength === 'number' &&\n        0 < maxLength &&\n        maxLength < str.length) {\n        return str.substring(0, maxLength) + '..';\n    }\n    return str;\n};\nexports.limitLength = limitLength;\nconst extractTableName = (builder) => {\n    const table = builder?._single?.table;\n    if (typeof table === 'object') {\n        return (0, exports.extractTableName)(table);\n    }\n    return table;\n};\nexports.extractTableName = extractTableName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsbUJBQW1CLEdBQUcsZUFBZSxHQUFHLGlCQUFpQixHQUFHLGtDQUFrQyxHQUFHLG9CQUFvQjtBQUNoSiwrQkFBK0IsbUJBQU8sQ0FBQyxpTUFBcUM7QUFDNUUsa0JBQWtCLG1CQUFPLENBQUMsa01BQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsV0FBVyxFQUFFLEdBQUcsR0FBRyxNQUFNO0FBQy9DO0FBQ0Esa0JBQWtCLFdBQVcsRUFBRSxHQUFHO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2R5ZGVhcmtsYW5kL3NlbnRyeXZpYmUvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmV4dHJhY3RUYWJsZU5hbWUgPSBleHBvcnRzLmxpbWl0TGVuZ3RoID0gZXhwb3J0cy5nZXROYW1lID0gZXhwb3J0cy5tYXBTeXN0ZW0gPSBleHBvcnRzLm90ZWxFeGNlcHRpb25Gcm9tS25leEVycm9yID0gZXhwb3J0cy5nZXRGb3JtYXR0ZXIgPSB2b2lkIDA7XG5jb25zdCBzZW1hbnRpY19jb252ZW50aW9uc18xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zXCIpO1xuY29uc3Qgc2VtY29udl8xID0gcmVxdWlyZShcIi4vc2VtY29udlwiKTtcbmNvbnN0IGdldEZvcm1hdHRlciA9IChydW5uZXIpID0+IHtcbiAgICBpZiAocnVubmVyKSB7XG4gICAgICAgIGlmIChydW5uZXIuY2xpZW50KSB7XG4gICAgICAgICAgICBpZiAocnVubmVyLmNsaWVudC5fZm9ybWF0UXVlcnkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcnVubmVyLmNsaWVudC5fZm9ybWF0UXVlcnkuYmluZChydW5uZXIuY2xpZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJ1bm5lci5jbGllbnQuU3FsU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJ1bm5lci5jbGllbnQuU3FsU3RyaW5nLmZvcm1hdC5iaW5kKHJ1bm5lci5jbGllbnQuU3FsU3RyaW5nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocnVubmVyLmJ1aWxkZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBydW5uZXIuYnVpbGRlci50b1N0cmluZy5iaW5kKHJ1bm5lci5idWlsZGVyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKCkgPT4gJzxub29wIGZvcm1hdHRlcj4nO1xufTtcbmV4cG9ydHMuZ2V0Rm9ybWF0dGVyID0gZ2V0Rm9ybWF0dGVyO1xuZnVuY3Rpb24gb3RlbEV4Y2VwdGlvbkZyb21LbmV4RXJyb3IoZXJyLCBtZXNzYWdlKSB7XG4gICAgaWYgKCEoZXJyICYmIGVyciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBtZXNzYWdlLFxuICAgICAgICBjb2RlOiBlcnIuY29kZSxcbiAgICAgICAgc3RhY2s6IGVyci5zdGFjayxcbiAgICAgICAgbmFtZTogZXJyLm5hbWUsXG4gICAgfTtcbn1cbmV4cG9ydHMub3RlbEV4Y2VwdGlvbkZyb21LbmV4RXJyb3IgPSBvdGVsRXhjZXB0aW9uRnJvbUtuZXhFcnJvcjtcbmNvbnN0IHN5c3RlbU1hcCA9IG5ldyBNYXAoW1xuICAgIFsnc3FsaXRlMycsIHNlbWNvbnZfMS5EQl9TWVNURU1fTkFNRV9WQUxVRV9TUUxJVEVdLFxuICAgIFsncGcnLCBzZW1hbnRpY19jb252ZW50aW9uc18xLkRCX1NZU1RFTV9OQU1FX1ZBTFVFX1BPU1RHUkVTUUxdLFxuXSk7XG5jb25zdCBtYXBTeXN0ZW0gPSAoa25leFN5c3RlbSkgPT4ge1xuICAgIHJldHVybiBzeXN0ZW1NYXAuZ2V0KGtuZXhTeXN0ZW0pIHx8IGtuZXhTeXN0ZW07XG59O1xuZXhwb3J0cy5tYXBTeXN0ZW0gPSBtYXBTeXN0ZW07XG5jb25zdCBnZXROYW1lID0gKGRiLCBvcGVyYXRpb24sIHRhYmxlKSA9PiB7XG4gICAgaWYgKG9wZXJhdGlvbikge1xuICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtvcGVyYXRpb259ICR7ZGJ9LiR7dGFibGV9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYCR7b3BlcmF0aW9ufSAke2RifWA7XG4gICAgfVxuICAgIHJldHVybiBkYjtcbn07XG5leHBvcnRzLmdldE5hbWUgPSBnZXROYW1lO1xuY29uc3QgbGltaXRMZW5ndGggPSAoc3RyLCBtYXhMZW5ndGgpID0+IHtcbiAgICBpZiAodHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgdHlwZW9mIG1heExlbmd0aCA9PT0gJ251bWJlcicgJiZcbiAgICAgICAgMCA8IG1heExlbmd0aCAmJlxuICAgICAgICBtYXhMZW5ndGggPCBzdHIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKDAsIG1heExlbmd0aCkgKyAnLi4nO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufTtcbmV4cG9ydHMubGltaXRMZW5ndGggPSBsaW1pdExlbmd0aDtcbmNvbnN0IGV4dHJhY3RUYWJsZU5hbWUgPSAoYnVpbGRlcikgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYnVpbGRlcj8uX3NpbmdsZT8udGFibGU7XG4gICAgaWYgKHR5cGVvZiB0YWJsZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuICgwLCBleHBvcnRzLmV4dHJhY3RUYWJsZU5hbWUpKHRhYmxlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhYmxlO1xufTtcbmV4cG9ydHMuZXh0cmFjdFRhYmxlTmFtZSA9IGV4dHJhY3RUYWJsZU5hbWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.49.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-knex';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUI7QUFDOUM7QUFDQSx1QkFBdUI7QUFDdkIsb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyIvVXNlcnMvY29keWRlYXJrbGFuZC9zZW50cnl2aWJlL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9IGV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gdm9pZCAwO1xuLy8gdGhpcyBpcyBhdXRvZ2VuZXJhdGVkIGZpbGUsIHNlZSBzY3JpcHRzL3ZlcnNpb24tdXBkYXRlLmpzXG5leHBvcnRzLlBBQ0tBR0VfVkVSU0lPTiA9ICcwLjQ5LjAnO1xuZXhwb3J0cy5QQUNLQUdFX05BTUUgPSAnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SUPPORTED_VERSIONS = exports.MODULE_NAME = void 0;\nexports.MODULE_NAME = 'knex';\nexports.SUPPORTED_VERSIONS = [\n    // use \"lib/execution\" for runner.js, \"lib\" for client.js as basepath, latest tested 0.95.6\n    '>=0.22.0 <4',\n    // use \"lib\" as basepath\n    '>=0.10.0 <0.18.0',\n    '>=0.19.0 <0.22.0',\n    // use \"src\" as basepath\n    '>=0.18.0 <0.19.0',\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsbUJBQW1CO0FBQ2hELG1CQUFtQjtBQUNuQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY29keWRlYXJrbGFuZC9zZW50cnl2aWJlL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU1VQUE9SVEVEX1ZFUlNJT05TID0gZXhwb3J0cy5NT0RVTEVfTkFNRSA9IHZvaWQgMDtcbmV4cG9ydHMuTU9EVUxFX05BTUUgPSAna25leCc7XG5leHBvcnRzLlNVUFBPUlRFRF9WRVJTSU9OUyA9IFtcbiAgICAvLyB1c2UgXCJsaWIvZXhlY3V0aW9uXCIgZm9yIHJ1bm5lci5qcywgXCJsaWJcIiBmb3IgY2xpZW50LmpzIGFzIGJhc2VwYXRoLCBsYXRlc3QgdGVzdGVkIDAuOTUuNlxuICAgICc+PTAuMjIuMCA8NCcsXG4gICAgLy8gdXNlIFwibGliXCIgYXMgYmFzZXBhdGhcbiAgICAnPj0wLjEwLjAgPDAuMTguMCcsXG4gICAgJz49MC4xOS4wIDwwLjIyLjAnLFxuICAgIC8vIHVzZSBcInNyY1wiIGFzIGJhc2VwYXRoXG4gICAgJz49MC4xOC4wIDwwLjE5LjAnLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nvar instrumentation_1 = __webpack_require__(/*! ./instrumentation */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\");\nObject.defineProperty(exports, \"KnexInstrumentation\", ({ enumerable: true, get: function () { return instrumentation_1.KnexInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isd0JBQXdCLG1CQUFPLENBQUMsMk1BQW1CO0FBQ25ELHVEQUFzRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUMvSSIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS25leEluc3RydW1lbnRhdGlvbiA9IHZvaWQgMDtcbnZhciBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktuZXhJbnN0cnVtZW50YXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluc3RydW1lbnRhdGlvbl8xLktuZXhJbnN0cnVtZW50YXRpb247IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\");\nconst constants = __webpack_require__(/*! ./constants */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst contextSymbol = Symbol('opentelemetry.instrumentation-knex.context');\nconst DEFAULT_CONFIG = {\n    maxQueryLength: 1022,\n    requireParentSpan: false,\n};\nclass KnexInstrumentation extends instrumentation_1.InstrumentationBase {\n    _semconvStability;\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n        this._semconvStability = (0, instrumentation_1.semconvStabilityFromStr)('database', process.env.OTEL_SEMCONV_STABILITY_OPT_IN);\n    }\n    setConfig(config = {}) {\n        super.setConfig({ ...DEFAULT_CONFIG, ...config });\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition(constants.MODULE_NAME, constants.SUPPORTED_VERSIONS);\n        module.files.push(this.getClientNodeModuleFileInstrumentation('src'), this.getClientNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('src'), this.getRunnerNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('lib/execution'));\n        return module;\n    }\n    getRunnerNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/runner.js`, constants.SUPPORTED_VERSIONS, (Runner, moduleVersion) => {\n            this.ensureWrapped(Runner.prototype, 'query', this.createQueryWrapper(moduleVersion));\n            return Runner;\n        }, (Runner, moduleVersion) => {\n            this._unwrap(Runner.prototype, 'query');\n            return Runner;\n        });\n    }\n    getClientNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/client.js`, constants.SUPPORTED_VERSIONS, (Client) => {\n            this.ensureWrapped(Client.prototype, 'queryBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'schemaBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'raw', this.storeContext.bind(this));\n            return Client;\n        }, (Client) => {\n            this._unwrap(Client.prototype, 'queryBuilder');\n            this._unwrap(Client.prototype, 'schemaBuilder');\n            this._unwrap(Client.prototype, 'raw');\n            return Client;\n        });\n    }\n    createQueryWrapper(moduleVersion) {\n        const instrumentation = this;\n        return function wrapQuery(original) {\n            return function wrapped_logging_method(query) {\n                const config = this.client.config;\n                const table = utils.extractTableName(this.builder);\n                // `method` actually refers to the knex API method - Not exactly \"operation\"\n                // in the spec sense, but matches most of the time.\n                const operation = query?.method;\n                const name = config?.connection?.filename || config?.connection?.database;\n                const { maxQueryLength } = instrumentation.getConfig();\n                const attributes = {\n                    'knex.version': moduleVersion,\n                };\n                const transport = config?.connection?.filename === ':memory:' ? 'inproc' : undefined;\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.SEMATTRS_DB_SQL_TABLE]: table,\n                        [semantic_conventions_1.SEMATTRS_DB_OPERATION]: operation,\n                        [semantic_conventions_1.SEMATTRS_DB_USER]: config?.connection?.user,\n                        [semantic_conventions_1.SEMATTRS_DB_NAME]: name,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: config?.connection?.host,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: config?.connection?.port,\n                        [semantic_conventions_1.SEMATTRS_NET_TRANSPORT]: transport,\n                    });\n                }\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.ATTR_DB_SYSTEM_NAME]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.ATTR_DB_COLLECTION_NAME]: table,\n                        [semantic_conventions_1.ATTR_DB_OPERATION_NAME]: operation,\n                        [semantic_conventions_1.ATTR_DB_NAMESPACE]: name,\n                        [semantic_conventions_1.ATTR_SERVER_ADDRESS]: config?.connection?.host,\n                        [semantic_conventions_1.ATTR_SERVER_PORT]: config?.connection?.port,\n                    });\n                }\n                if (maxQueryLength) {\n                    // filters both undefined and 0\n                    const queryText = utils.limitLength(query?.sql, maxQueryLength);\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                        attributes[semantic_conventions_1.ATTR_DB_QUERY_TEXT] = queryText;\n                    }\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                        attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = queryText;\n                    }\n                }\n                const parentContext = this.builder[contextSymbol] || api.context.active();\n                const parentSpan = api.trace.getSpan(parentContext);\n                const hasActiveParent = parentSpan && api.trace.isSpanContextValid(parentSpan.spanContext());\n                if (instrumentation._config.requireParentSpan && !hasActiveParent) {\n                    return original.bind(this)(...arguments);\n                }\n                const span = instrumentation.tracer.startSpan(utils.getName(name, operation, table), {\n                    kind: api.SpanKind.CLIENT,\n                    attributes,\n                }, parentContext);\n                const spanContext = api.trace.setSpan(api.context.active(), span);\n                return api.context\n                    .with(spanContext, original, this, ...arguments)\n                    .then((result) => {\n                    span.end();\n                    return result;\n                })\n                    .catch((err) => {\n                    // knex adds full query with all the binding values to the message,\n                    // we want to undo that without changing the original error\n                    const formatter = utils.getFormatter(this);\n                    const fullQuery = formatter(query.sql, query.bindings || []);\n                    const message = err.message.replace(fullQuery + ' - ', '');\n                    const exc = utils.otelExceptionFromKnexError(err, message);\n                    span.recordException(exc);\n                    span.setStatus({ code: api.SpanStatusCode.ERROR, message });\n                    span.end();\n                    throw err;\n                });\n            };\n        };\n    }\n    storeContext(original) {\n        return function wrapped_logging_method() {\n            const builder = original.apply(this, arguments);\n            // Builder is a custom promise type and when awaited it fails to propagate context.\n            // We store the parent context at the moment of initiating the builder\n            // otherwise we'd have nothing to attach the span as a child for in `query`.\n            Object.defineProperty(builder, contextSymbol, {\n                value: api.context.active(),\n            });\n            return builder;\n        };\n    }\n    ensureWrapped(obj, methodName, wrapper) {\n        if ((0, instrumentation_1.isWrapped)(obj[methodName])) {\n            this._unwrap(obj, methodName);\n        }\n        this._wrap(obj, methodName, wrapper);\n    }\n}\nexports.KnexInstrumentation = KnexInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = void 0;\n/*\n * This file contains a copy of unstable semantic convention definitions\n * used by this package.\n * @see https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions#unstable-semconv\n */\n/**\n * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n */\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = 'sqlite';\n//# sourceMappingURL=semconv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9zZW1jb252LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMEJBQTBCO0FBQ2hFO0FBQ0EsbUNBQW1DO0FBQ25DIiwic291cmNlcyI6WyIvVXNlcnMvY29keWRlYXJrbGFuZC9zZW50cnl2aWJlL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvc2VtY29udi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRCX1NZU1RFTV9OQU1FX1ZBTFVFX1NRTElURSA9IHZvaWQgMDtcbi8qXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgYSBjb3B5IG9mIHVuc3RhYmxlIHNlbWFudGljIGNvbnZlbnRpb24gZGVmaW5pdGlvbnNcbiAqIHVzZWQgYnkgdGhpcyBwYWNrYWdlLlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vb3Blbi10ZWxlbWV0cnkvb3BlbnRlbGVtZXRyeS1qcy90cmVlL21haW4vc2VtYW50aWMtY29udmVudGlvbnMjdW5zdGFibGUtc2VtY29udlxuICovXG4vKipcbiAqIEVudW0gdmFsdWUgXCJzcWxpdGVcIiBmb3IgYXR0cmlidXRlIHtAbGluayBBVFRSX0RCX1NZU1RFTV9OQU1FfS5cbiAqL1xuZXhwb3J0cy5EQl9TWVNURU1fTkFNRV9WQUxVRV9TUUxJVEUgPSAnc3FsaXRlJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbWNvbnYuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extractTableName = exports.limitLength = exports.getName = exports.mapSystem = exports.otelExceptionFromKnexError = exports.getFormatter = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst semconv_1 = __webpack_require__(/*! ./semconv */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\");\nconst getFormatter = (runner) => {\n    if (runner) {\n        if (runner.client) {\n            if (runner.client._formatQuery) {\n                return runner.client._formatQuery.bind(runner.client);\n            }\n            else if (runner.client.SqlString) {\n                return runner.client.SqlString.format.bind(runner.client.SqlString);\n            }\n        }\n        if (runner.builder) {\n            return runner.builder.toString.bind(runner.builder);\n        }\n    }\n    return () => '<noop formatter>';\n};\nexports.getFormatter = getFormatter;\nfunction otelExceptionFromKnexError(err, message) {\n    if (!(err && err instanceof Error)) {\n        return err;\n    }\n    return {\n        message,\n        code: err.code,\n        stack: err.stack,\n        name: err.name,\n    };\n}\nexports.otelExceptionFromKnexError = otelExceptionFromKnexError;\nconst systemMap = new Map([\n    ['sqlite3', semconv_1.DB_SYSTEM_NAME_VALUE_SQLITE],\n    ['pg', semantic_conventions_1.DB_SYSTEM_NAME_VALUE_POSTGRESQL],\n]);\nconst mapSystem = (knexSystem) => {\n    return systemMap.get(knexSystem) || knexSystem;\n};\nexports.mapSystem = mapSystem;\nconst getName = (db, operation, table) => {\n    if (operation) {\n        if (table) {\n            return `${operation} ${db}.${table}`;\n        }\n        return `${operation} ${db}`;\n    }\n    return db;\n};\nexports.getName = getName;\nconst limitLength = (str, maxLength) => {\n    if (typeof str === 'string' &&\n        typeof maxLength === 'number' &&\n        0 < maxLength &&\n        maxLength < str.length) {\n        return str.substring(0, maxLength) + '..';\n    }\n    return str;\n};\nexports.limitLength = limitLength;\nconst extractTableName = (builder) => {\n    const table = builder?._single?.table;\n    if (typeof table === 'object') {\n        return (0, exports.extractTableName)(table);\n    }\n    return table;\n};\nexports.extractTableName = extractTableName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxtQkFBbUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsa0NBQWtDLEdBQUcsb0JBQW9CO0FBQ2hKLCtCQUErQixtQkFBTyxDQUFDLDBMQUFxQztBQUM1RSxrQkFBa0IsbUJBQU8sQ0FBQywyTEFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXLEVBQUUsR0FBRyxHQUFHLE1BQU07QUFDL0M7QUFDQSxrQkFBa0IsV0FBVyxFQUFFLEdBQUc7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXh0cmFjdFRhYmxlTmFtZSA9IGV4cG9ydHMubGltaXRMZW5ndGggPSBleHBvcnRzLmdldE5hbWUgPSBleHBvcnRzLm1hcFN5c3RlbSA9IGV4cG9ydHMub3RlbEV4Y2VwdGlvbkZyb21LbmV4RXJyb3IgPSBleHBvcnRzLmdldEZvcm1hdHRlciA9IHZvaWQgMDtcbmNvbnN0IHNlbWFudGljX2NvbnZlbnRpb25zXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnNcIik7XG5jb25zdCBzZW1jb252XzEgPSByZXF1aXJlKFwiLi9zZW1jb252XCIpO1xuY29uc3QgZ2V0Rm9ybWF0dGVyID0gKHJ1bm5lcikgPT4ge1xuICAgIGlmIChydW5uZXIpIHtcbiAgICAgICAgaWYgKHJ1bm5lci5jbGllbnQpIHtcbiAgICAgICAgICAgIGlmIChydW5uZXIuY2xpZW50Ll9mb3JtYXRRdWVyeSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBydW5uZXIuY2xpZW50Ll9mb3JtYXRRdWVyeS5iaW5kKHJ1bm5lci5jbGllbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocnVubmVyLmNsaWVudC5TcWxTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcnVubmVyLmNsaWVudC5TcWxTdHJpbmcuZm9ybWF0LmJpbmQocnVubmVyLmNsaWVudC5TcWxTdHJpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChydW5uZXIuYnVpbGRlcikge1xuICAgICAgICAgICAgcmV0dXJuIHJ1bm5lci5idWlsZGVyLnRvU3RyaW5nLmJpbmQocnVubmVyLmJ1aWxkZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiAnPG5vb3AgZm9ybWF0dGVyPic7XG59O1xuZXhwb3J0cy5nZXRGb3JtYXR0ZXIgPSBnZXRGb3JtYXR0ZXI7XG5mdW5jdGlvbiBvdGVsRXhjZXB0aW9uRnJvbUtuZXhFcnJvcihlcnIsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIShlcnIgJiYgZXJyIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IGVyci5jb2RlLFxuICAgICAgICBzdGFjazogZXJyLnN0YWNrLFxuICAgICAgICBuYW1lOiBlcnIubmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5vdGVsRXhjZXB0aW9uRnJvbUtuZXhFcnJvciA9IG90ZWxFeGNlcHRpb25Gcm9tS25leEVycm9yO1xuY29uc3Qgc3lzdGVtTWFwID0gbmV3IE1hcChbXG4gICAgWydzcWxpdGUzJywgc2VtY29udl8xLkRCX1NZU1RFTV9OQU1FX1ZBTFVFX1NRTElURV0sXG4gICAgWydwZycsIHNlbWFudGljX2NvbnZlbnRpb25zXzEuREJfU1lTVEVNX05BTUVfVkFMVUVfUE9TVEdSRVNRTF0sXG5dKTtcbmNvbnN0IG1hcFN5c3RlbSA9IChrbmV4U3lzdGVtKSA9PiB7XG4gICAgcmV0dXJuIHN5c3RlbU1hcC5nZXQoa25leFN5c3RlbSkgfHwga25leFN5c3RlbTtcbn07XG5leHBvcnRzLm1hcFN5c3RlbSA9IG1hcFN5c3RlbTtcbmNvbnN0IGdldE5hbWUgPSAoZGIsIG9wZXJhdGlvbiwgdGFibGUpID0+IHtcbiAgICBpZiAob3BlcmF0aW9uKSB7XG4gICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke29wZXJhdGlvbn0gJHtkYn0uJHt0YWJsZX1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtvcGVyYXRpb259ICR7ZGJ9YDtcbiAgICB9XG4gICAgcmV0dXJuIGRiO1xufTtcbmV4cG9ydHMuZ2V0TmFtZSA9IGdldE5hbWU7XG5jb25zdCBsaW1pdExlbmd0aCA9IChzdHIsIG1heExlbmd0aCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJlxuICAgICAgICB0eXBlb2YgbWF4TGVuZ3RoID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAwIDwgbWF4TGVuZ3RoICYmXG4gICAgICAgIG1heExlbmd0aCA8IHN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcoMCwgbWF4TGVuZ3RoKSArICcuLic7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG59O1xuZXhwb3J0cy5saW1pdExlbmd0aCA9IGxpbWl0TGVuZ3RoO1xuY29uc3QgZXh0cmFjdFRhYmxlTmFtZSA9IChidWlsZGVyKSA9PiB7XG4gICAgY29uc3QgdGFibGUgPSBidWlsZGVyPy5fc2luZ2xlPy50YWJsZTtcbiAgICBpZiAodHlwZW9mIHRhYmxlID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gKDAsIGV4cG9ydHMuZXh0cmFjdFRhYmxlTmFtZSkodGFibGUpO1xuICAgIH1cbiAgICByZXR1cm4gdGFibGU7XG59O1xuZXhwb3J0cy5leHRyYWN0VGFibGVOYW1lID0gZXh0cmFjdFRhYmxlTmFtZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.49.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-knex';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QztBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2R5ZGVhcmtsYW5kL3NlbnRyeXZpYmUvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy92ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDkuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SUPPORTED_VERSIONS = exports.MODULE_NAME = void 0;\nexports.MODULE_NAME = 'knex';\nexports.SUPPORTED_VERSIONS = [\n    // use \"lib/execution\" for runner.js, \"lib\" for client.js as basepath, latest tested 0.95.6\n    '>=0.22.0 <4',\n    // use \"lib\" as basepath\n    '>=0.10.0 <0.18.0',\n    '>=0.19.0 <0.22.0',\n    // use \"src\" as basepath\n    '>=0.18.0 <0.19.0',\n];\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsbUJBQW1CO0FBQ2hELG1CQUFtQjtBQUNuQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY29keWRlYXJrbGFuZC9zZW50cnl2aWJlL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU1VQUE9SVEVEX1ZFUlNJT05TID0gZXhwb3J0cy5NT0RVTEVfTkFNRSA9IHZvaWQgMDtcbmV4cG9ydHMuTU9EVUxFX05BTUUgPSAna25leCc7XG5leHBvcnRzLlNVUFBPUlRFRF9WRVJTSU9OUyA9IFtcbiAgICAvLyB1c2UgXCJsaWIvZXhlY3V0aW9uXCIgZm9yIHJ1bm5lci5qcywgXCJsaWJcIiBmb3IgY2xpZW50LmpzIGFzIGJhc2VwYXRoLCBsYXRlc3QgdGVzdGVkIDAuOTUuNlxuICAgICc+PTAuMjIuMCA8NCcsXG4gICAgLy8gdXNlIFwibGliXCIgYXMgYmFzZXBhdGhcbiAgICAnPj0wLjEwLjAgPDAuMTguMCcsXG4gICAgJz49MC4xOS4wIDwwLjIyLjAnLFxuICAgIC8vIHVzZSBcInNyY1wiIGFzIGJhc2VwYXRoXG4gICAgJz49MC4xOC4wIDwwLjE5LjAnLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nvar instrumentation_1 = __webpack_require__(/*! ./instrumentation */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\");\nObject.defineProperty(exports, \"KnexInstrumentation\", ({ enumerable: true, get: function () { return instrumentation_1.KnexInstrumentation; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0Isd0JBQXdCLG1CQUFPLENBQUMsMk1BQW1CO0FBQ25ELHVEQUFzRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUMvSSIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS25leEluc3RydW1lbnRhdGlvbiA9IHZvaWQgMDtcbnZhciBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCIuL2luc3RydW1lbnRhdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktuZXhJbnN0cnVtZW50YXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluc3RydW1lbnRhdGlvbl8xLktuZXhJbnN0cnVtZW50YXRpb247IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js ***!
  \**********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KnexInstrumentation = void 0;\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\n/** @knipignore */\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\");\nconst constants = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/constants.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.204.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst utils = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst contextSymbol = Symbol('opentelemetry.instrumentation-knex.context');\nconst DEFAULT_CONFIG = {\n    maxQueryLength: 1022,\n    requireParentSpan: false,\n};\nclass KnexInstrumentation extends instrumentation_1.InstrumentationBase {\n    _semconvStability;\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, { ...DEFAULT_CONFIG, ...config });\n        this._semconvStability = (0, instrumentation_1.semconvStabilityFromStr)('database', process.env.OTEL_SEMCONV_STABILITY_OPT_IN);\n    }\n    setConfig(config = {}) {\n        super.setConfig({ ...DEFAULT_CONFIG, ...config });\n    }\n    init() {\n        const module = new instrumentation_1.InstrumentationNodeModuleDefinition(constants.MODULE_NAME, constants.SUPPORTED_VERSIONS);\n        module.files.push(this.getClientNodeModuleFileInstrumentation('src'), this.getClientNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('src'), this.getRunnerNodeModuleFileInstrumentation('lib'), this.getRunnerNodeModuleFileInstrumentation('lib/execution'));\n        return module;\n    }\n    getRunnerNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/runner.js`, constants.SUPPORTED_VERSIONS, (Runner, moduleVersion) => {\n            this.ensureWrapped(Runner.prototype, 'query', this.createQueryWrapper(moduleVersion));\n            return Runner;\n        }, (Runner, moduleVersion) => {\n            this._unwrap(Runner.prototype, 'query');\n            return Runner;\n        });\n    }\n    getClientNodeModuleFileInstrumentation(basePath) {\n        return new instrumentation_1.InstrumentationNodeModuleFile(`knex/${basePath}/client.js`, constants.SUPPORTED_VERSIONS, (Client) => {\n            this.ensureWrapped(Client.prototype, 'queryBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'schemaBuilder', this.storeContext.bind(this));\n            this.ensureWrapped(Client.prototype, 'raw', this.storeContext.bind(this));\n            return Client;\n        }, (Client) => {\n            this._unwrap(Client.prototype, 'queryBuilder');\n            this._unwrap(Client.prototype, 'schemaBuilder');\n            this._unwrap(Client.prototype, 'raw');\n            return Client;\n        });\n    }\n    createQueryWrapper(moduleVersion) {\n        const instrumentation = this;\n        return function wrapQuery(original) {\n            return function wrapped_logging_method(query) {\n                const config = this.client.config;\n                const table = utils.extractTableName(this.builder);\n                // `method` actually refers to the knex API method - Not exactly \"operation\"\n                // in the spec sense, but matches most of the time.\n                const operation = query?.method;\n                const name = config?.connection?.filename || config?.connection?.database;\n                const { maxQueryLength } = instrumentation.getConfig();\n                const attributes = {\n                    'knex.version': moduleVersion,\n                };\n                const transport = config?.connection?.filename === ':memory:' ? 'inproc' : undefined;\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.SEMATTRS_DB_SQL_TABLE]: table,\n                        [semantic_conventions_1.SEMATTRS_DB_OPERATION]: operation,\n                        [semantic_conventions_1.SEMATTRS_DB_USER]: config?.connection?.user,\n                        [semantic_conventions_1.SEMATTRS_DB_NAME]: name,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: config?.connection?.host,\n                        [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: config?.connection?.port,\n                        [semantic_conventions_1.SEMATTRS_NET_TRANSPORT]: transport,\n                    });\n                }\n                if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                    Object.assign(attributes, {\n                        [semantic_conventions_1.ATTR_DB_SYSTEM_NAME]: utils.mapSystem(config.client),\n                        [semantic_conventions_1.ATTR_DB_COLLECTION_NAME]: table,\n                        [semantic_conventions_1.ATTR_DB_OPERATION_NAME]: operation,\n                        [semantic_conventions_1.ATTR_DB_NAMESPACE]: name,\n                        [semantic_conventions_1.ATTR_SERVER_ADDRESS]: config?.connection?.host,\n                        [semantic_conventions_1.ATTR_SERVER_PORT]: config?.connection?.port,\n                    });\n                }\n                if (maxQueryLength) {\n                    // filters both undefined and 0\n                    const queryText = utils.limitLength(query?.sql, maxQueryLength);\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.STABLE) {\n                        attributes[semantic_conventions_1.ATTR_DB_QUERY_TEXT] = queryText;\n                    }\n                    if (instrumentation._semconvStability & instrumentation_1.SemconvStability.OLD) {\n                        attributes[semantic_conventions_1.SEMATTRS_DB_STATEMENT] = queryText;\n                    }\n                }\n                const parentContext = this.builder[contextSymbol] || api.context.active();\n                const parentSpan = api.trace.getSpan(parentContext);\n                const hasActiveParent = parentSpan && api.trace.isSpanContextValid(parentSpan.spanContext());\n                if (instrumentation._config.requireParentSpan && !hasActiveParent) {\n                    return original.bind(this)(...arguments);\n                }\n                const span = instrumentation.tracer.startSpan(utils.getName(name, operation, table), {\n                    kind: api.SpanKind.CLIENT,\n                    attributes,\n                }, parentContext);\n                const spanContext = api.trace.setSpan(api.context.active(), span);\n                return api.context\n                    .with(spanContext, original, this, ...arguments)\n                    .then((result) => {\n                    span.end();\n                    return result;\n                })\n                    .catch((err) => {\n                    // knex adds full query with all the binding values to the message,\n                    // we want to undo that without changing the original error\n                    const formatter = utils.getFormatter(this);\n                    const fullQuery = formatter(query.sql, query.bindings || []);\n                    const message = err.message.replace(fullQuery + ' - ', '');\n                    const exc = utils.otelExceptionFromKnexError(err, message);\n                    span.recordException(exc);\n                    span.setStatus({ code: api.SpanStatusCode.ERROR, message });\n                    span.end();\n                    throw err;\n                });\n            };\n        };\n    }\n    storeContext(original) {\n        return function wrapped_logging_method() {\n            const builder = original.apply(this, arguments);\n            // Builder is a custom promise type and when awaited it fails to propagate context.\n            // We store the parent context at the moment of initiating the builder\n            // otherwise we'd have nothing to attach the span as a child for in `query`.\n            Object.defineProperty(builder, contextSymbol, {\n                value: api.context.active(),\n            });\n            return builder;\n        };\n    }\n    ensureWrapped(obj, methodName, wrapper) {\n        if ((0, instrumentation_1.isWrapped)(obj[methodName])) {\n            this._unwrap(obj, methodName);\n        }\n        this._wrap(obj, methodName, wrapper);\n    }\n}\nexports.KnexInstrumentation = KnexInstrumentation;\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/instrumentation.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = void 0;\n/*\n * This file contains a copy of unstable semantic convention definitions\n * used by this package.\n * @see https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions#unstable-semconv\n */\n/**\n * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n */\nexports.DB_SYSTEM_NAME_VALUE_SQLITE = 'sqlite';\n//# sourceMappingURL=semconv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy9zZW1jb252LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMEJBQTBCO0FBQ2hFO0FBQ0EsbUNBQW1DO0FBQ25DIiwic291cmNlcyI6WyIvVXNlcnMvY29keWRlYXJrbGFuZC9zZW50cnl2aWJlL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24ta25leEAwLjQ5LjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leC9idWlsZC9zcmMvc2VtY29udi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRCX1NZU1RFTV9OQU1FX1ZBTFVFX1NRTElURSA9IHZvaWQgMDtcbi8qXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgYSBjb3B5IG9mIHVuc3RhYmxlIHNlbWFudGljIGNvbnZlbnRpb24gZGVmaW5pdGlvbnNcbiAqIHVzZWQgYnkgdGhpcyBwYWNrYWdlLlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vb3Blbi10ZWxlbWV0cnkvb3BlbnRlbGVtZXRyeS1qcy90cmVlL21haW4vc2VtYW50aWMtY29udmVudGlvbnMjdW5zdGFibGUtc2VtY29udlxuICovXG4vKipcbiAqIEVudW0gdmFsdWUgXCJzcWxpdGVcIiBmb3IgYXR0cmlidXRlIHtAbGluayBBVFRSX0RCX1NZU1RFTV9OQU1FfS5cbiAqL1xuZXhwb3J0cy5EQl9TWVNURU1fTkFNRV9WQUxVRV9TUUxJVEUgPSAnc3FsaXRlJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbWNvbnYuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js ***!
  \************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.extractTableName = exports.limitLength = exports.getName = exports.mapSystem = exports.otelExceptionFromKnexError = exports.getFormatter = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst semconv_1 = __webpack_require__(/*! ./semconv */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/semconv.js\");\nconst getFormatter = (runner) => {\n    if (runner) {\n        if (runner.client) {\n            if (runner.client._formatQuery) {\n                return runner.client._formatQuery.bind(runner.client);\n            }\n            else if (runner.client.SqlString) {\n                return runner.client.SqlString.format.bind(runner.client.SqlString);\n            }\n        }\n        if (runner.builder) {\n            return runner.builder.toString.bind(runner.builder);\n        }\n    }\n    return () => '<noop formatter>';\n};\nexports.getFormatter = getFormatter;\nfunction otelExceptionFromKnexError(err, message) {\n    if (!(err && err instanceof Error)) {\n        return err;\n    }\n    return {\n        message,\n        code: err.code,\n        stack: err.stack,\n        name: err.name,\n    };\n}\nexports.otelExceptionFromKnexError = otelExceptionFromKnexError;\nconst systemMap = new Map([\n    ['sqlite3', semconv_1.DB_SYSTEM_NAME_VALUE_SQLITE],\n    ['pg', semantic_conventions_1.DB_SYSTEM_NAME_VALUE_POSTGRESQL],\n]);\nconst mapSystem = (knexSystem) => {\n    return systemMap.get(knexSystem) || knexSystem;\n};\nexports.mapSystem = mapSystem;\nconst getName = (db, operation, table) => {\n    if (operation) {\n        if (table) {\n            return `${operation} ${db}.${table}`;\n        }\n        return `${operation} ${db}`;\n    }\n    return db;\n};\nexports.getName = getName;\nconst limitLength = (str, maxLength) => {\n    if (typeof str === 'string' &&\n        typeof maxLength === 'number' &&\n        0 < maxLength &&\n        maxLength < str.length) {\n        return str.substring(0, maxLength) + '..';\n    }\n    return str;\n};\nexports.limitLength = limitLength;\nconst extractTableName = (builder) => {\n    const table = builder?._single?.table;\n    if (typeof table === 'object') {\n        return (0, exports.extractTableName)(table);\n    }\n    return table;\n};\nexports.extractTableName = extractTableName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxtQkFBbUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsa0NBQWtDLEdBQUcsb0JBQW9CO0FBQ2hKLCtCQUErQixtQkFBTyxDQUFDLDBMQUFxQztBQUM1RSxrQkFBa0IsbUJBQU8sQ0FBQywyTEFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixXQUFXLEVBQUUsR0FBRyxHQUFHLE1BQU07QUFDL0M7QUFDQSxrQkFBa0IsV0FBVyxFQUFFLEdBQUc7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiL1VzZXJzL2NvZHlkZWFya2xhbmQvc2VudHJ5dmliZS9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLWtuZXhAMC40OS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtuZXgvYnVpbGQvc3JjL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXh0cmFjdFRhYmxlTmFtZSA9IGV4cG9ydHMubGltaXRMZW5ndGggPSBleHBvcnRzLmdldE5hbWUgPSBleHBvcnRzLm1hcFN5c3RlbSA9IGV4cG9ydHMub3RlbEV4Y2VwdGlvbkZyb21LbmV4RXJyb3IgPSBleHBvcnRzLmdldEZvcm1hdHRlciA9IHZvaWQgMDtcbmNvbnN0IHNlbWFudGljX2NvbnZlbnRpb25zXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnNcIik7XG5jb25zdCBzZW1jb252XzEgPSByZXF1aXJlKFwiLi9zZW1jb252XCIpO1xuY29uc3QgZ2V0Rm9ybWF0dGVyID0gKHJ1bm5lcikgPT4ge1xuICAgIGlmIChydW5uZXIpIHtcbiAgICAgICAgaWYgKHJ1bm5lci5jbGllbnQpIHtcbiAgICAgICAgICAgIGlmIChydW5uZXIuY2xpZW50Ll9mb3JtYXRRdWVyeSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBydW5uZXIuY2xpZW50Ll9mb3JtYXRRdWVyeS5iaW5kKHJ1bm5lci5jbGllbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocnVubmVyLmNsaWVudC5TcWxTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcnVubmVyLmNsaWVudC5TcWxTdHJpbmcuZm9ybWF0LmJpbmQocnVubmVyLmNsaWVudC5TcWxTdHJpbmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChydW5uZXIuYnVpbGRlcikge1xuICAgICAgICAgICAgcmV0dXJuIHJ1bm5lci5idWlsZGVyLnRvU3RyaW5nLmJpbmQocnVubmVyLmJ1aWxkZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiAnPG5vb3AgZm9ybWF0dGVyPic7XG59O1xuZXhwb3J0cy5nZXRGb3JtYXR0ZXIgPSBnZXRGb3JtYXR0ZXI7XG5mdW5jdGlvbiBvdGVsRXhjZXB0aW9uRnJvbUtuZXhFcnJvcihlcnIsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIShlcnIgJiYgZXJyIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IGVyci5jb2RlLFxuICAgICAgICBzdGFjazogZXJyLnN0YWNrLFxuICAgICAgICBuYW1lOiBlcnIubmFtZSxcbiAgICB9O1xufVxuZXhwb3J0cy5vdGVsRXhjZXB0aW9uRnJvbUtuZXhFcnJvciA9IG90ZWxFeGNlcHRpb25Gcm9tS25leEVycm9yO1xuY29uc3Qgc3lzdGVtTWFwID0gbmV3IE1hcChbXG4gICAgWydzcWxpdGUzJywgc2VtY29udl8xLkRCX1NZU1RFTV9OQU1FX1ZBTFVFX1NRTElURV0sXG4gICAgWydwZycsIHNlbWFudGljX2NvbnZlbnRpb25zXzEuREJfU1lTVEVNX05BTUVfVkFMVUVfUE9TVEdSRVNRTF0sXG5dKTtcbmNvbnN0IG1hcFN5c3RlbSA9IChrbmV4U3lzdGVtKSA9PiB7XG4gICAgcmV0dXJuIHN5c3RlbU1hcC5nZXQoa25leFN5c3RlbSkgfHwga25leFN5c3RlbTtcbn07XG5leHBvcnRzLm1hcFN5c3RlbSA9IG1hcFN5c3RlbTtcbmNvbnN0IGdldE5hbWUgPSAoZGIsIG9wZXJhdGlvbiwgdGFibGUpID0+IHtcbiAgICBpZiAob3BlcmF0aW9uKSB7XG4gICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIGAke29wZXJhdGlvbn0gJHtkYn0uJHt0YWJsZX1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtvcGVyYXRpb259ICR7ZGJ9YDtcbiAgICB9XG4gICAgcmV0dXJuIGRiO1xufTtcbmV4cG9ydHMuZ2V0TmFtZSA9IGdldE5hbWU7XG5jb25zdCBsaW1pdExlbmd0aCA9IChzdHIsIG1heExlbmd0aCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJlxuICAgICAgICB0eXBlb2YgbWF4TGVuZ3RoID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAwIDwgbWF4TGVuZ3RoICYmXG4gICAgICAgIG1heExlbmd0aCA8IHN0ci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcoMCwgbWF4TGVuZ3RoKSArICcuLic7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG59O1xuZXhwb3J0cy5saW1pdExlbmd0aCA9IGxpbWl0TGVuZ3RoO1xuY29uc3QgZXh0cmFjdFRhYmxlTmFtZSA9IChidWlsZGVyKSA9PiB7XG4gICAgY29uc3QgdGFibGUgPSBidWlsZGVyPy5fc2luZ2xlPy50YWJsZTtcbiAgICBpZiAodHlwZW9mIHRhYmxlID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gKDAsIGV4cG9ydHMuZXh0cmFjdFRhYmxlTmFtZSkodGFibGUpO1xuICAgIH1cbiAgICByZXR1cm4gdGFibGU7XG59O1xuZXhwb3J0cy5leHRyYWN0VGFibGVOYW1lID0gZXh0cmFjdFRhYmxlTmFtZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.49.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-knex';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QztBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb2R5ZGVhcmtsYW5kL3NlbnRyeXZpYmUvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1rbmV4QDAuNDkuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rbmV4L2J1aWxkL3NyYy92ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDkuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-knex@0.49.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-knex/build/src/version.js\n");

/***/ })

};
;